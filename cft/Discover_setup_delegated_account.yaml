AWSTemplateFormatVersion: '2010-09-09'
#
# Version 4
# Stackset now uses managed_services permissions
#
Description: Template to create a StackSet for enabling CrowdStrike Discover in member accounts
Parameters:
  RoleCreationDelayTimer:
    Description: Delay timer wait for role creation before registering acct (Time in seconds)
    Type: Number
    MaxValue: 800
    Default: 60

  FalconClientId:
    Description: Your Falcon OAuth2 API Key.
    NoEcho: 'true'
    Type: String


  FalconSecret:
    Description: Your Falcon OAuth2 API Secret.
    NoEcho: 'true'
    Type: String

  ExternalId:
    Description: ExternalID Used for authenticating assume role requests.
    NoEcho: 'true'
    Type: String

  S3Bucket:
    Type: String

  CrowdStrikeCloud:

    Description:  The CrowdStrike Cloud your CID is hosted in us1, us2, eu
    Type: String
    AllowedValues:
      - us1
      - us2
      - eu
  RoleName:
    Description: IAM Role Name (May be modified)
    Type: String
    Default: CrowdStrikeFalcon
  LogArchiveAccount:
    Type: String
    Description: AccountId of Log Archive Bucket

  LogArchiveBucketRegion:
    Type: String
    Description: The region where the cloudtrail bucket is located.

  StackSetName:
    Type: String
    Description: The name of the StackSet that will be created
    Default: CrowdstrikeDiscover-IAM-ROLES

Mappings:
  CSCloud:
    us1:
      CloudUrl: https://api.crowdstrike.com
      CSAssumingRoleName: CS-Prod-HG-CsCloudconnectaws
      CSAccountNumber: 292230061137
    us2:
      CloudUrl: https://api.us-2.crowdstrike.com
      CSAssumingRoleName: mav-gyr-main-s001-cs-cloudconnectaws
      CSAccountNumber: 292230061137
    eu:
      CloudUrl: https://api.eu.crowdstrike.com
      CSAssumingRoleName: lion-lanner-main-s001-cs-cloudconnectaws
      CSAccountNumber: 292230061137

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: S3 Bucket objects must be public read only in the region where stackset operations are performed.
        Parameters:
          - S3Bucket
      - Label:
          default: CrowdStrike Role Parameters.
        Parameters:
          - RoleName
          - ExternalId
      - Label:
          default: CrowdStrike Falcon API keys.
        Parameters:
          - FalconClientId
          - FalconSecret
      - Label:
          default: Log Archive Account Details
        Parameters:
          - LogArchiveAccount
          - LogArchiveBucketRegion
#
Resources:
  CrowdStrikeCredentials:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: CrowdStrike Credentials
      Name: !Join
        - '-'
        - - !Ref 'AWS::StackName'
          - CrowdStrikeAPISecret
      SecretString:
        Fn::Join:
          - ''
          - - '{"FalconClientId":"'
            - Ref: FalconClientId
            - '","FalconSecret": "'
            - Ref: FalconSecret
            - '"}'
  launchLambdaRole:
    Type: AWS::IAM::Role
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: "Listsecrets * is required."
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
            Condition: { }
      Path: /
      Policies:
        - PolicyName: Get_Values
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              Sid: VisualEditor1
              Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource: !Ref CrowdStrikeCredentials
        - PolicyName: List_secrets
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              Sid: VisualEditor2
              Effect: Allow
              Action:
                - secretsmanager:ListSecrets
              Resource: '*'
        - PolicyName: CloudFormation_ops
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              Sid: VisualEditor2
              Effect: Allow
              Action:
                - cloudformation:CreateStackSet
                - cloudformation:CreateStackInstances
                - cloudformation:DescribeStackSet
                - cloudformation:ListStackInstances
                - cloudformation:DeleteStackInstances
                - cloudformation:DeleteStackSet
              Resource: !Join [ ':', [ 'arn:aws:cloudformation', !Ref 'AWS::Region', !Ref 'AWS::AccountId', 'stackset/*/*' ] ]
        - PolicyName: create_stackset
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              Sid: VisualEditor2
              Effect: Allow
              Action:
                - cloudformation:CreateStackSet
              Resource: '*'
        - PolicyName: Pass_Role
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              Sid: VisualEditor3
              Effect: Allow
              Action:
                - iam:PassRole
              Resource: !Join [ ':', [ 'arn:aws:iam:', !Ref "AWS::AccountId", 'role/service-role/AWSControlTowerStackSetRole' ] ]
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AWSOrganizationsReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess

  permissionForEventsToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt "CreateStackSetLambda.Arn"
      Principal: cloudformation.amazonaws.com
      SourceAccount: !Ref "AWS::AccountId"

  CreateStackSetLambda:
    Type: 'AWS::Lambda::Function'
    DeletionPolicy: Delete
    Properties:
      Code:
        S3Bucket: !Ref S3Bucket
        S3Key: create_stackset_lambda_org_acct.zip
      Layers:
        - !Ref lambdaLayer
      Environment:
        Variables:
          S3Bucket: !Ref S3Bucket
          CrowdStrikeCloud: !Ref CrowdStrikeCloud
          RoleCreationDelayTimer: !Ref RoleCreationDelayTimer
          AwsRegion: !Ref AWS::Region
          LogArchiveAccount: !Ref LogArchiveAccount
          LogArchiveBucketRegion: !Ref LogArchiveBucketRegion
          RoleName: !Ref RoleName
          CSAccountNumber: !FindInMap [ CSCloud, !Ref CrowdStrikeCloud, CSAccountNumber ]
          CSAssumingRoleName: !FindInMap [ CSCloud, !Ref CrowdStrikeCloud, CSAssumingRoleName ]
          CrowdstrikeCredentialsSecret: !Ref CrowdStrikeCredentials
          StackSetName: !Ref StackSetName
      Handler: create_stackset_lambda_org_acct.lambda_handler
      Runtime: python3.7
      MemorySize: 128
      Role: !GetAtt "launchLambdaRole.Arn"
      Timeout: 180
  CreateStackSet:
    Type: 'Custom::TriggerLambda'
    Properties:
      FalconSecret: !Ref FalconSecret
      FalconClientId: !Ref FalconClientId
      ServiceToken: !GetAtt
        - CreateStackSetLambda
        - Arn
  lambdaLayer:
    Type: AWS::Lambda::LayerVersion
    Properties:
      CompatibleRuntimes:
        - python3.7
      Content:
        S3Bucket: !Ref S3Bucket
        S3Key: falconpy-layer.zip
      Description: Layer for requests package
      LayerName: requests-package






